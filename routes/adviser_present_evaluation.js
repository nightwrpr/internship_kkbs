var express = require('express');
var router = express.Router();
const db = require('../db');

// Route ‡∏´‡∏ô‡πâ‡∏≤ teacher/dashboard
router.get('/', (req, res) => {
  if (!req.session.user) {
    return res.redirect('/users/login');
  }

  const { user } = req.session;
  const teacher = user.teacher;

  console.log(user, teacher); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• session

  res.render('adviser_present_evaluation', {
    title: '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å',
    user: user,   // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡πÑ‡∏õ‡∏ó‡∏µ‡πà view
    teacher: teacher // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• student ‡πÑ‡∏õ‡∏ó‡∏µ‡πà view
  });
});

router.get('/dashboard/students', (req, res) => {
  db.query(`
    SELECT u.user_id, u.name, u.email, s.student_code, ir.request_id
    FROM internship_request ir
    INNER JOIN user u ON ir.student_id = u.user_id
    INNER JOIN student s ON u.student_id = s.student_id
    WHERE ir.status = 'A' AND ir.delete_up IS NULL;
  `, (error, students) => {
    if (error) {
      console.error('‚ùå Database Error:', error);
      return res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" });
    }

    if (students.length === 0) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô" });
    }

    return res.status(200).json(students);
  });
});

const { v4: uuidv4 } = require('uuid');

// Route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
router.post('/dashboard/save', (req, res) => {
  const { request_id, scores, additionalComments = '', criteriaNames } = req.body;

  if (!request_id) {
    return res.status(400).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö request_id" });
  }

  if (!scores || scores.length === 0) {
    return res.status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏Å‡∏ì‡∏ë‡πå" });
  }

  if (criteriaNames && criteriaNames.length !== scores.length) {
    return res.status(400).json({ message: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô" });
  }

  const criteriaDefaultNames = criteriaNames || [
    "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î", 
    "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠", 
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ", 
    "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠", 
    "‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°", 
    "‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î", 
    "‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏≤‡∏¢"
  ];

  db.query('SELECT history_id FROM internship_history WHERE internship_request_id = ?', [request_id], (error, historyRows) => {
    if (error) {
      console.error('‚ùå Database Error:', error);
      return res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" });
    }

    if (historyRows.length === 0) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ" });
    }

    const history_id = historyRows[0].history_id;
    console.log("üîç history_id ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:", history_id);

    const promises = criteriaDefaultNames.map((criteriaName, index) => {
      const score = scores[index];
      const criteria_id = uuidv4(); 

      const insertCriteriaQuery = `INSERT INTO adviser_evaluation_criteria (criteria_id, criteria_name, create_up) VALUES (?, ?, NOW())`;
      const insertEvaluationQuery = `INSERT INTO adviser_evaluation (history_id, score, no, evaluation_date, comment, criteria_id) VALUES (?, ?, ?, ?, ?, ?)`;

      return new Promise((resolve, reject) => {
        db.query(insertCriteriaQuery, [criteria_id, criteriaName], (err) => {
          if (err) return reject(err);

          db.query(insertEvaluationQuery, [
            history_id,
            score,
            index + 1,
            new Date(),
            additionalComments || '',
            criteria_id
          ], (err) => {
            if (err) return reject(err);
            resolve();
          });
        });
      });
    });

    Promise.all(promises)
      .then(() => {
        console.log("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        res.status(201).json({ message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
      })
      .catch((error) => {
        console.error("‚ùå Error during evaluation saving:", error);
        res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", error: error.message });
      });
  });
});

module.exports = router;
