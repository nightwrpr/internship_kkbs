<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined&display=block">
    <title>Manage User Roles</title>
</head>

<body>
    <div id="sidebar-container"></div>
    <%- include('partials/sidebar', { user: session.user }) %>

        <div class="main-content">
            <div class="header">
                <span class="material-symbols-outlined">menu</span>
                <h5 class="mb-0">Manage User Roles</h5>
                <span class="material-symbols-outlined">more_vert</span>
            </div>
            <div class="search-bar">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchInput" placeholder="ค้นหาชื่อหรือตำแหน่ง"
                        aria-label="ค้นหางาน" onkeyup="searchJobs()">
                    <button class="btn btn-primary" type="button">
                        <i class="bi bi-search"></i> ค้นหา
                    </button>
                </div>
            </div>
            <div class="container">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Current Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (users && users.length> 0) { %>
                            <% users.forEach(user=> { %>
                                <tr>
                                    <td>
                                        <%= user.User_id %>
                                    </td>
                                    <td class="editable" data-id="<%= user.User_id %>" data-type="username">
                                        <%= user.user_name %>
                                    </td>
                                    <td>
                                        <%= user.user_email %>
                                    </td>
                                    <td class="editable" data-id="<%= user.User_id %>" data-type="role">
                                        <%= user.role %>
                                    </td>
                                    <td>
                                        <button class="btn btn-secondary btn-sm"
                                            onclick="editData(<%= user.User_id %>)">Edit</button>
                                        <button class="btn btn-primary btn-sm d-none" id="save-<%= user.User_id %>"
                                            onclick="saveData(<%= user.User_id %>)">Save</button>
                                    </td>

                                </tr>
                                <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="4">No users found.</td>
                                        </tr>
                                        <% } %>
                    </tbody>

                </table>
            </div>
        </div>

        <!-- Footer container -->
        <%- include('partials/footer.html') %>
            <div id="footer-container"></div>

            <script>
                // ฟังก์ชันในการแก้ไขข้อมูลทั้งชื่อและตำแหน่ง
                function editData(userId) {
                    // ค้นหา element ที่ต้องการแก้ไขตาม userId
                    const editableElements = document.querySelectorAll(`.editable[data-id="${userId}"]`);
                    editableElements.forEach(element => {
                        const currentValue = element.textContent.trim();
                        if (element.dataset.type === 'role') {
                            // แสดง Select Dropdown สำหรับเลือก Role
                            const select = `
                <select class="form-select form-select-sm">
                    <option value="Student" ${currentValue === 'Student' ? 'selected' : ''}>Student</option>
                    <option value="Advisor" ${currentValue === 'Advisor' ? 'selected' : ''}>Advisor</option>
                    <option value="Mentor" ${currentValue === 'Mentor' ? 'selected' : ''}>Mentor</option>
                    <option value="ExternalEvaluator" ${currentValue === 'ExternalEvaluator' ? 'selected' : ''}>External Evaluator</option>
                </select>`;
                            element.innerHTML = select;
                        } else if (element.dataset.type === 'username') {
                            // แสดง Input Text สำหรับแก้ไขชื่อ
                            const input = `<input type="text" value="${currentValue}" class="form-control form-control-sm" />`;
                            element.innerHTML = input;
                        }
                    });

                    // ซ่อนปุ่ม Edit และแสดงปุ่ม Save
                    document.getElementById(`save-${userId}`).classList.remove('d-none');
                    document.querySelector(`#save-${userId}`).previousElementSibling.classList.add('d-none');
                }

                function saveData(userId) {
                    const editableElements = document.querySelectorAll(`.editable[data-id="${userId}"]`);
                    const updatedData = {};

                    editableElements.forEach(element => {
                        if (element.dataset.type === 'role') {
                            const selectedRole = element.querySelector('select').value;
                            element.textContent = selectedRole; // อัปเดต UI
                            updatedData.role = selectedRole;
                        } else if (element.dataset.type === 'username') {
                            const newName = element.querySelector('input').value;
                            element.textContent = newName; // อัปเดต UI
                            updatedData.username = newName;
                        }
                    });

                    // ซ่อนปุ่ม Save และแสดงปุ่ม Edit
                    document.getElementById(`save-${userId}`).classList.add('d-none');
                    document.querySelector(`#save-${userId}`).previousElementSibling.classList.remove('d-none');

                    // ส่งข้อมูลอัปเดตไปที่เซิร์ฟเวอร์
                    fetch(`/update-user/${userId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(updatedData)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert(`User ID ${userId} has been updated successfully.`);
                            } else {
                                alert(`Error updating user: ${data.message}`);
                            }
                        })
                        .catch(error => console.error('Error:', error));
                }

            </script>

            <script>
                // ฟังก์ชันค้นหางาน
                function searchJobs() {
                    var input, filter, table, tr, td, i, txtValue;
                    input = document.getElementById("searchInput");
                    filter = input.value.toLowerCase(); // ค้นหาเป็นตัวพิมพ์เล็ก
                    table = document.querySelector("table");
                    tr = table.getElementsByTagName("tr");

                    // วนลูปผ่านทุกแถวในตาราง
                    for (i = 1; i < tr.length; i++) {  // เริ่มจากแถวที่ 1 (ไม่รวมแถวหัวตาราง)
                        td = tr[i].getElementsByTagName("td");
                        if (td.length > 0) {
                            var userName = td[1].textContent || td[1].innerText;
                            var role = td[3].textContent || td[3].innerText;

                            if (userName.toLowerCase().indexOf(filter) > -1 || role.toLowerCase().indexOf(filter) > -1) {
                                tr[i].style.display = "";  // แสดงแถว
                            } else {
                                tr[i].style.display = "none";  // ซ่อนแถว
                            }
                        }
                    }
                }
            </script>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>